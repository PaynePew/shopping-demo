// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String? // 密碼（如果用戶使用 Google 登入則可以為空）
  googleId  String? // Google 登入用
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  wishlist Wishlist[]
  cart     Cart[]
  orders   Order[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  categoryId  Int? // 關聯分類的 ID
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  category   Category?        @relation(fields: [categoryId], references: [id])
  variants   ProductVariant[]
  wishlist   Wishlist[]       @relation("ProductWishlist") // 關聯 Wishlist
  cart       Cart[]           @relation("ProductCart") // 關聯 Cart
  orderItems OrderItem[]
}

model ProductVariant {
  id        Int      @id @default(autoincrement())
  productId Int
  color     String // 顏色
  size      String // 尺寸
  stock     Int // 庫存數量
  price     Float // 可選，若不同顏色/尺寸的價格不同
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product    Product     @relation(fields: [productId], references: [id])
  wishlist   Wishlist[]  @relation("VariantWishlist") // 關聯 Wishlist
  cart       Cart[]      @relation("VariantCart") // 關聯 Cart
  orderItems OrderItem[]
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  parentId    Int? // 父分類 ID，用於子分類
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  parent   Category?  @relation("CategoryParent", fields: [parentId], references: [id])
  children Category[] @relation("CategoryParent")
  products Product[]
}

model Wishlist {
  id        Int      @id @default(autoincrement())
  userId    Int
  variantId Int // 關聯到具體的產品變體
  productId Int // 關聯到具體的產品
  createdAt DateTime @default(now())

  user    User           @relation(fields: [userId], references: [id])
  variant ProductVariant @relation("VariantWishlist", fields: [variantId], references: [id])
  product Product        @relation("ProductWishlist", fields: [productId], references: [id])
}

model Cart {
  id        Int      @id @default(autoincrement())
  userId    Int
  variantId Int // 關聯到具體的產品變體
  productId Int // 關聯到具體的產品
  quantity  Int // 購買數量
  createdAt DateTime @default(now())

  user    User           @relation(fields: [userId], references: [id])
  variant ProductVariant @relation("VariantCart", fields: [variantId], references: [id])
  product Product        @relation("ProductCart", fields: [productId], references: [id])
}

model Order {
  id        Int      @id @default(autoincrement())
  userId    Int
  total     Float // 訂單總金額
  status    String   @default("pending") // 訂單狀態：pending, completed, cancelled
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user       User        @relation(fields: [userId], references: [id])
  orderItems OrderItem[]
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  variantId Int // 關聯到具體的產品變體
  quantity  Int // 購買數量
  price     Float // 單價（當時購買的價格）
  createdAt DateTime @default(now())

  order     Order          @relation(fields: [orderId], references: [id])
  variant   ProductVariant @relation(fields: [variantId], references: [id])
  Product   Product?       @relation(fields: [productId], references: [id])
  productId Int?
}
